// <auto-generated />
using GeekShopping.ProductApi.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeekShopping.ProductApi.Migrations
{
    [DbContext(typeof(ServerContext))]
    partial class ServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GeekShopping.ProductApi.Model.Products", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 4L,
                            CategoryName = "Camisetas",
                            Description = "Camiste de caminhada",
                            ImageUrl = "urldaqui",
                            Name = "CAMISETA DE CAMINHADA",
                            Price = 69.97m
                        },
                        new
                        {
                            Id = 5L,
                            CategoryName = "Camping",
                            Description = "Barraca simples de camping",
                            ImageUrl = "urldaqui",
                            Name = "BARRACA DE CAMPING",
                            Price = 369.97m
                        },
                        new
                        {
                            Id = 6L,
                            CategoryName = "Camisetas",
                            Description = "Camiste de caminhada ergometrica",
                            ImageUrl = "urldaqui",
                            Name = "CAMISETA DE CAMINHADA ERGOMETRICA",
                            Price = 169.97m
                        },
                        new
                        {
                            Id = 7L,
                            CategoryName = "Camping",
                            Description = "Bolsa termica para camping",
                            ImageUrl = "urldaqui",
                            Name = "BOLSA TERMICA DE CAMPING",
                            Price = 69.97m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
